Search.setIndex({"docnames": ["debug_handler_common", "handle_unicode_common", "index", "labo_prob1", "labo_prob1_common", "labo_prob2", "labo_prob2_common", "labo_prob3", "labo_prob3_common", "labo_prob4", "labo_prob4_common", "smart_formatter_common"], "filenames": ["debug_handler_common.rst", "handle_unicode_common.rst", "index.rst", "labo_prob1.rst", "labo_prob1_common.rst", "labo_prob2.rst", "labo_prob2_common.rst", "labo_prob3.rst", "labo_prob3_common.rst", "labo_prob4.rst", "labo_prob4_common.rst", "smart_formatter_common.rst"], "titles": ["Module debug_handler_common", "Module handle_unicode_common", "Bienvenue - Documentation du labo GIF270", "Module labo_prob1", "Module labo_prob1_common", "Module labo_prob2", "Module labo_prob2_common", "Module labo_prob3", "Module labo_prob3_common", "Module labo_prob4", "Module labo_prob4_common", "Module smart_formatter_common"], "terms": {"debughandl": [0, 4], "sourc": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11], "bas": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11], "object": [0, 1, 4, 5, 6, 8, 10], "utilis": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10], "d\u00e9tect": [0, 3, 4], "ger": [0, 1], "except": [0, 3, 4], "dan": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11], "\u00e9tudi": [0, 9, 10], "copyright": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11], "2024": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "f": [0, 1, 9], "mailhot": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11], "univers": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11], "sherbrook": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11], "static": [0, 1, 5, 6, 8], "print_debug_info": 0, "non": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11], "m\u00e9thod": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11], "statiqu": 0, "indiqu": [0, 1, 3, 8, 9, 10], "o\u00f9": [0, 9, 10], "a": [0, 1, 4, 6, 7, 8, 9, 10], "lieu": 0, "acced": 0, "stack": 0, "trac": 0, "imprim": [0, 1, 4, 6, 7, 8, 9, 10, 11], "typ": [0, 1, 3, 5, 6, 8, 10], "valeur": [0, 3, 4, 6, 7, 8, 10], "lign": [0, 3, 4, 5, 6, 8, 9, 10, 11], "portion": 0, "return": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10], "void": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10], "rien": [0, 6, 10], "retourn": [0, 1, 3, 6, 8, 10], "print_general_except": 0, "arbitrair": [0, 5, 6], "L": [0, 3, 4, 5, 6, 7, 8, 9, 10], "inform": [0, 8], "sujet": 0, "ser": 0, "arg": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10], "tout": [0, 1, 4, 6, 8, 10], "compr": 0, "objet": [0, 3, 4, 5, 6, 7, 8, 9, 10], "print_timeout_except": 0, "info": 0, "temp": 0, "ex\u00e9cu": [0, 3, 4, 5, 7, 9], "trop": 0, "grand": [0, 8], "set_start_tim": 0, "d\u00e9but": [0, 4, 6, 11], "permet": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11], "mesur": 0, "approxim": 0, "perform": 0, "Ne": [0, 8], "fait": [0, 1, 3, 8, 10], "m\u00e9moris": 0, "cour": [0, 3, 4, 5, 6, 7, 8, 9, 10], "set_student_cip": 0, "student_cip": 0, "str": [0, 1, 5, 6, 8, 9, 10], "associ": [0, 3, 8], "cip": 0, "d\u00e9bogag": [0, 1, 3, 4], "ex\u00e9cut": 0, "start_execution_timing": 0, "d\u00e9marr": [0, 3], "chronometr": 0, "identifi": 0, "longu": 0, "conserv": 0, "d\u00e9part": [0, 8, 9, 10], "start_timeout": 0, "timeout": 0, "d\u00e9compt": 0, "temporel": 0, "second": 0, "prend": 0, "int": [0, 3, 4, 5, 6, 8, 9, 10], "La": [0, 1, 3, 4, 5, 6, 8, 9, 11], "del": 0, "Au": [0, 3, 4, 5, 6, 7, 8, 9, 10], "retour": [0, 3, 4, 5, 6, 7, 8, 9, 10], "alarm": 0, "d\u00e9clench": 0, "besoin": [0, 3], "stop_execution_timing": 0, "calcul": [0, 3, 5, 6], "total": 0, "timeout_handl": 0, "signum": 0, "fram": 0, "debughandlertimeoutexcept": 0, "Cette": [0, 1, 8], "d\u00e9fin": [0, 8, 10], "nouveau": [0, 5, 6, 8, 9, 10], "captur": 0, "problem": [0, 1, 3, 4], "document": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11], "cr\u00e9": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "13": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "fevr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "utilitair": [1, 11], "trait": [1, 3, 4, 6, 8, 9, 10], "cha\u00een": [1, 3, 4, 6, 11], "caracter": [1, 3, 4, 6, 9, 10, 11], "unicod": 1, "utf": [1, 3, 4], "8": [1, 3, 4, 9, 10], "n\u00e9cessair": [1, 6, 8, 10], "lettr": [1, 9, 10], "accentu": 1, "fr\u00e9d\u00e9ric": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11], "handleunicodecommon": [1, 4], "debug_utf8_string": 1, "a_str": 1, "chain": 1, "sous": [1, 7, 8], "form": 1, "hexad\u00e9cimal": 1, "tous": [1, 3, 4, 5, 6, 7, 8, 9, 10], "pass": [1, 8, 9, 10], "parametr": [1, 3, 4, 5, 6, 7, 8, 9, 10], "util": [1, 10], "uniqu": 1, "Il": 1, "plusieur": [1, 10, 11], "possibl": [1, 9], "python": [1, 5, 6], "distingu": 1, "impress": [1, 10], "peut": [1, 8], "m\u00eam": [1, 3, 8, 9, 10], "diff\u00e9rent": [1, 3, 8, 9, 10], "v\u00e9rifi": 1, "contenu": [1, 3, 8, 10], "r\u00e9el": 1, "affich": 1, "observ": [1, 3, 7, 8, 9], "d\u00e9bogu": [1, 3], "format": [1, 4], "get_string": 1, "normalize_string": 1, "normalis": [1, 5, 6], "oper": [1, 5], "repr\u00e9sent": [1, 5, 6], "En": 1, "effet": 1, "deux": [1, 3, 5, 6, 8, 10], "existent": 1, "suiv": [1, 3, 4, 7, 8, 9, 10], "accent": [1, 9], "Le": [1, 3, 4, 5, 6, 7, 8, 9, 10], "part": [1, 3, 5, 6, 8, 9, 10], "aur": 1, "comparaison": [1, 3], "cepend": [1, 8], "agit": 1, "donc": 1, "essentiel": 1, "avoir": 1, "effectu": [1, 7, 8, 9], "convert": 1, "canon": 1, "standard": [1, 7, 8], "string_from_hex_list": 1, "hex_utf8_str": 1, "transform": 1, "ensembl": [1, 3, 5, 6, 10], "nombr": [1, 3, 5, 6, 7, 8, 9, 10], "hexadecimal": 1, "utf8": 1, "r\u00e9sult": 1, "modul": 2, "debug_handler_common": 2, "diagramm": 2, "class": 2, "cod": 2, "handle_unicode_common": 2, "labo_prob1": 2, "labo_prob1_common": 2, "labo_prob2": 2, "labo_prob2_common": 2, "labo_prob3": 2, "labo_prob3_common": 2, "labo_prob4": 2, "labo_prob4_common": 2, "smart_formatter_common": 2, "pag": 2, "recherch": [2, 10], "explor": [3, 4, 5, 6, 7, 8, 9, 10], "premi": [3, 4, 5, 6], "exercic": [3, 4, 5, 6, 7, 8, 9, 10], "laboratoir": [3, 4, 5, 6, 7, 8, 9, 10], "app": [3, 4, 5, 6, 7, 8, 9, 10], "gif270": [3, 4, 5, 6, 7, 8, 9, 10], "1": [3, 4], "touch": [3, 4, 5, 6, 7, 8, 9, 10], "\u00e9l\u00e9ment": [3, 4, 7, 8, 9, 10], "point": [3, 4], "arr\u00eat": [3, 4, 10], "breakpoint": [3, 4], "identif": [3, 4], "logiqu": [3, 4], "interrupt": [3, 4], "san": [3, 4, 9], "fin": [3, 4, 8], "2023": [3, 4, 7, 8, 9, 10], "laboprob1": 3, "parsingclass1": [3, 4], "cr\u00e9ation": [3, 4, 5, 6, 8, 9, 10], "comport": 3, "probl\u00e9mat": 3, "h\u00e9rit": [3, 5, 6, 8, 9, 10], "lit": [3, 5, 6, 8, 10], "command": [3, 4, 5, 6, 8, 9, 10], "Les": [3, 8, 9, 10], "accessibl": [3, 4, 6, 8, 9, 10], "mp": 3, "inclus": [3, 4, 6, 8, 9, 10, 11], "factoriel": 3, "times2": 3, "long_calcul": 3, "initialis": [3, 4, 5, 6, 7, 8, 9, 10], "nouvel": [3, 4, 5, 6, 7, 8, 9, 10], "instanc": [3, 4, 5, 6, 7, 8, 9, 10], "compare_string": 3, "apparent": 3, "ident": 3, "lorsqu": [3, 4, 6, 10, 11], "print": 3, "elles": 3, "proviennent": 3, "aucun": 3, "r\u00e9sultat": [3, 7], "divers": 3, "Par": [3, 8], "d\u00e9faut": [3, 4, 6, 8, 10, 11], "si": [3, 5, 6, 8, 10], "e": 3, "don": [3, 4, 6, 8, 9, 10], "try": 3, "bon": 3, "Vous": 3, "dev": 3, "corrig": 3, "local": 3, "appel": [3, 5, 6, 8], "r\u00e9curs": [3, 10], "2": [3, 5, 6, 9, 10, 11], "d\u00e9termin": 3, "champ": [3, 4, 6, 8, 9, 10], "fact_end": 3, "lequel": [3, 7, 8], "cherch": 3, "long": 3, "val": [3, 8], "tir": [3, 8, 9, 10], "self": [3, 4, 6, 8, 9, 10], "provient": 3, "prepar": 3, "pr\u00e9par": 3, "retr": 3, "config": 3, "entr\u00e9": 3, "doubl": 3, "compar": [3, 5, 6], "structur": [3, 4, 6, 8, 10], "configur": 3, "mis": [3, 8], "jour": [3, 8, 10], "Pas": 3, "main": [3, 5, 7, 9], "d\u00e9marrag": [3, 5, 7, 9], "labo": [3, 5, 7, 9], "pr\u00e9sent": [3, 4, 6, 8, 9, 10], "p": 3, "3": [3, 7, 8, 9, 10], "4": [3, 9, 10], "concert": 3, "termin": [3, 5, 7, 9], "modif": [4, 6, 8, 9, 10], "gestion": 4, "not": [4, 6, 8, 9, 10, 11], "argument": [4, 6, 8, 9, 10], "principal": [4, 6, 8, 9, 10], "requ": [4, 6, 8, 9, 10], "mod": [4, 6, 8, 9, 10], "verbos": [4, 6, 8, 9, 10], "exempl": [4, 6, 8, 9, 10], "smartformatt": [4, 6, 11], "correct": [4, 6, 11], "help": [4, 6, 11], "r": [4, 6, 11], "configdat": 4, "num": 4, "ajout": [4, 5, 6, 7, 8, 9, 10], "trois": [4, 5], "pars": [4, 6, 8, 10], "pr\u00e9d\u00e9fin": [4, 6, 8, 10], "lir": [4, 6, 8, 10], "red\u00e9fin": [4, 5, 6, 8, 10], "setup_and_parse_cl": [4, 6, 8, 10], "argpars": [4, 6, 8, 10, 11], "enregistr": [4, 6, 8, 10], "reconna\u00eetr": [4, 6, 8, 10], "r\u00e9cuper": [4, 6, 8, 10], "produit": [4, 5, 6, 8, 9, 10], "reconnu": [4, 6, 8, 10], "compris": [4, 6, 8, 10], "deuxiem": [5, 6], "tableau": [5, 6, 8], "hachag": [5, 6], "red\u00e9finit": [5, 6, 7, 8, 9, 10], "\u00e9tabl": [5, 6, 10], "\u00e9gal": [5, 6], "entre": [5, 6, 9, 10], "obten": [5, 6], "bigramm": [5, 6], "vecteur": [5, 6], "dict": [5, 6, 9, 10], "contient": [5, 6, 8, 9, 10], "taill": [5, 6, 8, 9, 10], "scalair": [5, 6], "cosinus": [5, 6], "angle": [5, 6], "2018": [5, 6, 7, 8, 9, 10], "bigram": [5, 6], "premier_mot": [5, 6], "deuxieme_mot": [5, 6], "bigramcommon": [5, 6], "personnalis": [5, 6], "dictionnair": [5, 6, 9, 10], "comment": [5, 6], "fair": [5, 6, 9], "hash": [5, 6], "mot": [5, 6, 9, 10], "laboprob2": [5, 6], "laboprob2common": [5, 6], "test": [5, 6, 9, 10], "valid": [5, 6, 10], "personalis": [5, 6], "parsingclass2": [5, 6], "add_bigram": [5, 6], "any": [5, 6], "bigram_dict": [5, 6], "fourn": [5, 6, 8, 9, 11], "comm": [5, 6, 9], "cl\u00e9": [5, 6, 8, 9, 10], "emmagasin": [5, 6], "compt": [5, 6], "add_bigram_object": [5, 6], "word1": [5, 6], "word2": [5, 6], "aid": [5, 6, 9, 11], "add_bigram_oth": [5, 6], "add_bigram_vector": [5, 6], "Est": [5, 6], "fonction": [5, 6, 9, 10], "pourquoi": [5, 6], "plut\u00f4t": [5, 6], "add_bigram_tupl": [5, 6], "cosin": [5, 6], "vector1": [5, 6], "vector2": [5, 6], "float": [5, 6], "conten": [5, 6, 9, 10], "fichi": [5, 6, 8, 9, 10], "angle_cos": [5, 6], "scalar_product": [5, 6], "prod_scal": [5, 6], "vector_siz": [5, 6], "vector": [5, 6], "siz": [5, 6], "doit": [5, 7, 8, 9, 10], "\u00eatre": [5, 7, 8, 9, 10], "ajust": [5, 7, 8], "ad\u00e9quat": 5, "altern": 5, "immuabl": 5, "faut": 5, "define_add_bigram_func": 6, "add_bigram_func": 6, "callabl": 6, "do_something": [6, 8], "statist": 6, "voulu": 6, "trouv": [6, 8, 9], "d\u00e9j\u00e0": [6, 8, 9, 10], "\u00e9cran": [6, 8, 10], "get_common_bigram": 6, "input_dict": 6, "test_dict": 6, "produir": [6, 9, 10], "commun": 6, "issus": 6, "common_dict": 6, "print_common_bigram": 6, "print_dict_bigram": 6, "contenus": 6, "read": 6, "lectur": [6, 8], "complet": [6, 8], "read_one_fil": [6, 8], "filenam": [6, 8], "file_dict": 6, "nom": [6, 8, 9, 10], "rempl": [6, 8], "read_file_lin": [6, 8], "list": [6, 8, 9, 10], "file_lin": [6, 8], "array": [6, 8], "lu": [6, 8], "troisiem": [7, 8], "arbre": [7, 8], "avl": [7, 8], "rotate_right": [7, 8], "avltre": [7, 8], "do_rebal": [7, 8], "bool": [7, 8, 9, 10], "avltreecommon": [7, 8], "abre": [7, 8], "balanc": [7, 8], "rebalanc": [7, 8], "dynam": [7, 8], "binair": [7, 8], "rotation_root": [7, 8], "treenod": [7, 8], "rotat": [7, 8], "ver": [7, 8], "droit": [7, 8], "noeud": [7, 8, 9, 10], "laboprob3": [7, 8], "impl\u00e9ment": 7, "activ": 7, "inact": 7, "ordre": [7, 8], "profondeur": [7, 8], "maximal": [7, 8, 10], "ardre": 7, "parsingclass3": 8, "binarysearchtre": 8, "rebal": 8, "nod": 8, "enfant": 8, "treenoc": 8, "rotate_left": 8, "gauch": 8, "update_bal": 8, "\u00c0": [8, 10], "certain": 8, "imm\u00e9diat": 8, "parent": 8, "ains": 8, "section": [8, 9, 10], "6": 8, "livr": [8, 9, 10], "r\u00e9f\u00e9rent": [8, 9, 10], "voir": [8, 10], "http": [8, 10], "runeston": [8, 10], "academy": [8, 10], "ns": [8, 10], "book": [8, 10], "published": [8, 10], "tre": 8, "searchtreeimplement": 8, "html": [8, 10], "amorc": 8, "vid": 8, "get": 8, "key": 8, "exist": 8, "length": 8, "put": 8, "laboprob3common": 8, "avltree_class": 8, "futur": 8, "build_avl": 8, "input_number": 8, "lor": 8, "facult": 8, "cel": 8, "version": 8, "initial": 8, "puis": 8, "ordon": 8, "print_avl": 8, "print_one_nod": 8, "depth": 8, "max_depth": 8, "chacun": 8, "D": [8, 9], "abord": 8, "ensuit": 8, "enfin": 8, "plus": [8, 10], "jusqu": [8, 10], "mainten": 8, "read_number": 8, "number": 8, "left": 8, "right": 8, "17": 8, "has_any_children": 8, "possed": 8, "moin": 8, "On": [8, 9], "vrai": 8, "faux": 8, "sinon": [8, 10], "has_both_children": 8, "has_left_child": 8, "null": 8, "has_right_child": 8, "is_leaf": 8, "feuill": 8, "ni": 8, "is_left_child": 8, "dont": 8, "is_right_child": 8, "is_root": 8, "racin": 8, "cas": 8, "replacenodedat": 8, "valu": 8, "lc": 8, "rc": 8, "remplac": [8, 11], "import": 8, "devient": 8, "quatriem": [9, 10], "graph": [9, 10], "proxim": [9, 10], "propriet": 9, "\u00e9tendu": 9, "arc": [9, 10], "diff": [9, 10], "masqu": [9, 10], "d\u00e9riv": 9, "parsingclass4": [9, 10], "franc": 9, "txt": 9, "barr": 9, "distanc": [9, 10], "29": 9, "alor": 9, "chemin": [9, 10], "eclat": 9, "marr": 9, "mair": 9, "frir": 9, "frer": 9, "fren": 9, "aren": 9, "amen": 9, "amer": 9, "aver": 9, "avar": 9, "aval": 9, "oval": 9, "oral": 9, "orag": 9, "otag": 9, "etag": 9, "etai": 9, "etais": 9, "epais": 9, "epris": 9, "ecris": 9, "ecrus": 9, "echus": 9, "echos": 9, "eclos": 9, "eclot": 9, "debrai": 9, "mare": 9, "mar": 9, "pare": 9, "pai": 9, "paien": 9, "paient": 9, "raient": 9, "iraient": 9, "rir": 9, "fris": 9, "fais": 9, "tais": 9, "tass": 9, "pans": 9, "pens": 9, "pend": 9, "rend": 9, "reni": 9, "deni": 9, "defi": 9, "defr": 9, "defrayent": 9, "defrai": 9, "wd": 9, "laboprob4": [9, 10], "laboprob4common": [9, 10], "tel": 9, "appara\u00eet": 9, "addedgesbetweenadjacentword": [9, 10], "refactoris": [9, 10], "partag": [9, 10], "buildgraph": [9, 10], "buildgraph2": [9, 10], "direct": [9, 10], "disponibl": [9, 10], "g": [9, 10], "mask": [9, 10], "_abc": [9, 10], "_bc": [9, 10], "etc": [9, 10], "addwordtomask": [9, 10], "word": [9, 10], "auquel": [9, 10], "origin": [9, 10], "word_fil": [9, 10], "word_dist": [9, 10], "different_word_siz": [9, 10], "modifi": [9, 10], "connect": [9, 10], "buildgraph1": [9, 10], "longueur": [9, 10], "repr\u00e9sentent": [9, 10], "lient": [9, 10], "demand": [9, 10], "wordfil": [9, 10], "worddist": [9, 10], "maximum": [9, 10], "perm": [9, 10], "adjacent": [9, 10], "\u00e9chel": [9, 10], "li": [9, 10], "suit": 9, "fonctionnel": 9, "incomplet": 10, "doivent": 10, "setmaxdist": 10, "annot": 10, "avant": 10, "buildingthewordladdergraph": 10, "adapt": 10, "optionnel": 10, "permettr": 10, "comprend": 10, "findword": 10, "start_word": 10, "vertex": 10, "correspond": 10, "getwordmask": 10, "start_point": 10, "init_word": 10, "\u00e9numer": 10, "abc": 10, "bc": 10, "ab": 10, "fa\u00e7on": 10, "appropri": 10, "markpath": 10, "current_vertex": 10, "current_depth": 10, "current_dist": 10, "court": 10, "marqu": 10, "voisin": 10, "obtient": 10, "petit": 10, "mettr": 10, "assez": 10, "consider": 10, "permis": 10, "currentdepth": 10, "limit": 10, "n\u00e9gat": 10, "cess": 10, "analys": 10, "0": 10, "printfromworddist": 10, "printpath": 10, "max_dist": 10, "vertex_list": 10, "requis": 10, "parcouru": 10, "travail": 10, "_prinpath": 10, "printrecurwithprev": 10, "v": 10, "storeworddist": 10, "testprob4": 10, "commentair": 11, "prog": 11, "indent_incr": 11, "max_help_posit": 11, "24": 11, "width": 11, "helpformatt": 11, "destin": 11, "formatt": 11, "affichag": 11, "messag": 11, "_split_lin": 11}, "objects": {"": [[0, 0, 0, "-", "debug_handler_common"], [1, 0, 0, "-", "handle_unicode_common"], [3, 0, 0, "-", "labo_prob1"], [4, 0, 0, "-", "labo_prob1_common"], [5, 0, 0, "-", "labo_prob2"], [6, 0, 0, "-", "labo_prob2_common"], [7, 0, 0, "-", "labo_prob3"], [8, 0, 0, "-", "labo_prob3_common"], [9, 0, 0, "-", "labo_prob4"], [10, 0, 0, "-", "labo_prob4_common"], [11, 0, 0, "-", "smart_formatter_common"]], "debug_handler_common": [[0, 1, 1, "", "DebugHandler"], [0, 3, 1, "", "DebugHandlerTimeOutException"]], "debug_handler_common.DebugHandler": [[0, 2, 1, "", "print_debug_info"], [0, 2, 1, "", "print_general_exception"], [0, 2, 1, "", "print_timeout_exception"], [0, 2, 1, "", "set_start_time"], [0, 2, 1, "", "set_student_cip"], [0, 2, 1, "", "start_execution_timing"], [0, 2, 1, "", "start_timeout"], [0, 2, 1, "", "stop_execution_timing"], [0, 2, 1, "", "timeout_handler"]], "handle_unicode_common": [[1, 1, 1, "", "HandleUnicodeCommon"]], "handle_unicode_common.HandleUnicodeCommon": [[1, 2, 1, "", "debug_utf8_string"], [1, 2, 1, "", "get_strings"], [1, 2, 1, "", "normalize_string"], [1, 2, 1, "", "string_from_hex_list"]], "labo_prob1": [[3, 1, 1, "", "LaboProb1"], [3, 4, 1, "", "main"]], "labo_prob1.LaboProb1": [[3, 2, 1, "", "compare_strings"], [3, 2, 1, "", "exceptions"], [3, 2, 1, "", "factorielle"], [3, 2, 1, "", "long_calcul"], [3, 2, 1, "", "prepare"], [3, 2, 1, "", "times2"]], "labo_prob1_common": [[4, 1, 1, "", "ConfigData"], [4, 1, 1, "", "ParsingClass1"]], "labo_prob1_common.ParsingClass1": [[4, 2, 1, "", "setup_and_parse_cli"]], "labo_prob2": [[5, 1, 1, "", "Bigram"], [5, 1, 1, "", "LaboProb2"], [5, 4, 1, "", "main"]], "labo_prob2.LaboProb2": [[5, 2, 1, "", "add_bigram"], [5, 2, 1, "", "add_bigram_object"], [5, 2, 1, "", "add_bigram_other"], [5, 2, 1, "", "add_bigram_vector"], [5, 2, 1, "", "cosine"], [5, 2, 1, "", "scalar_product"], [5, 2, 1, "", "vector_size"]], "labo_prob2_common": [[6, 1, 1, "", "BigramCommon"], [6, 1, 1, "", "LaboProb2Common"], [6, 1, 1, "", "ParsingClass2"]], "labo_prob2_common.LaboProb2Common": [[6, 2, 1, "", "add_bigram"], [6, 2, 1, "", "add_bigram_object"], [6, 2, 1, "", "add_bigram_other"], [6, 2, 1, "", "add_bigram_vector"], [6, 2, 1, "", "cosine"], [6, 2, 1, "", "define_add_bigram_func"], [6, 2, 1, "", "do_something"], [6, 2, 1, "", "get_common_bigrams"], [6, 2, 1, "", "print_common_bigrams"], [6, 2, 1, "", "print_dict_bigram"], [6, 2, 1, "", "read"], [6, 2, 1, "", "read_one_file"], [6, 2, 1, "", "scalar_product"], [6, 2, 1, "", "vector_size"]], "labo_prob2_common.ParsingClass2": [[6, 2, 1, "", "read_file_lines"], [6, 2, 1, "", "setup_and_parse_cli"]], "labo_prob3": [[7, 1, 1, "", "AVLTree"], [7, 4, 1, "", "main"]], "labo_prob3.AVLTree": [[7, 2, 1, "", "rotate_right"]], "labo_prob3_common": [[8, 1, 1, "", "AVLTreeCommon"], [8, 1, 1, "", "BinarySearchTree"], [8, 1, 1, "", "LaboProb3Common"], [8, 1, 1, "", "ParsingClass3"], [8, 1, 1, "", "TreeNode"]], "labo_prob3_common.AVLTreeCommon": [[8, 2, 1, "", "rebalance"], [8, 2, 1, "", "rotate_left"], [8, 2, 1, "", "rotate_right"], [8, 2, 1, "", "update_balance"]], "labo_prob3_common.BinarySearchTree": [[8, 2, 1, "", "get"], [8, 2, 1, "", "length"], [8, 2, 1, "", "put"]], "labo_prob3_common.LaboProb3Common": [[8, 2, 1, "", "build_AVL"], [8, 2, 1, "", "do_something"], [8, 2, 1, "", "print_AVL"], [8, 2, 1, "", "print_one_node"]], "labo_prob3_common.ParsingClass3": [[8, 2, 1, "", "read_file_lines"], [8, 2, 1, "", "read_numbers"], [8, 2, 1, "", "read_one_file"], [8, 2, 1, "", "setup_and_parse_cli"]], "labo_prob3_common.TreeNode": [[8, 2, 1, "", "has_any_children"], [8, 2, 1, "", "has_both_children"], [8, 2, 1, "", "has_left_child"], [8, 2, 1, "", "has_right_child"], [8, 2, 1, "", "is_leaf"], [8, 2, 1, "", "is_left_child"], [8, 2, 1, "", "is_right_child"], [8, 2, 1, "", "is_root"], [8, 2, 1, "", "replaceNodeData"]], "labo_prob4": [[9, 1, 1, "", "LaboProb4"], [9, 4, 1, "", "main"]], "labo_prob4.LaboProb4": [[9, 2, 1, "", "addEdgesBetweenAdjacentWords"], [9, 2, 1, "", "addWordToMask"], [9, 2, 1, "", "buildGraph2"]], "labo_prob4_common": [[10, 1, 1, "", "LaboProb4Common"], [10, 1, 1, "", "ParsingClass4"]], "labo_prob4_common.LaboProb4Common": [[10, 2, 1, "", "SetMaxDistance"], [10, 2, 1, "", "addEdgesBetweenAdjacentWords"], [10, 2, 1, "", "addWordToMask"], [10, 2, 1, "", "buildGraph"], [10, 2, 1, "", "buildGraph1"], [10, 2, 1, "", "buildGraph2"], [10, 2, 1, "", "findWord"], [10, 2, 1, "", "getWordMask"], [10, 2, 1, "", "markPath"], [10, 2, 1, "", "printFromWordDistance"], [10, 2, 1, "", "printPath"], [10, 2, 1, "", "printRecurWithPrev"], [10, 2, 1, "", "storeWordDistances"], [10, 2, 1, "", "testProb4"]], "labo_prob4_common.ParsingClass4": [[10, 2, 1, "", "setup_and_parse_cli"]], "smart_formatter_common": [[11, 1, 1, "", "SmartFormatter"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:exception", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python classe"], "2": ["py", "method", "Python m\u00e9thode"], "3": ["py", "exception", "Python exception"], "4": ["py", "function", "Python fonction"]}, "titleterms": {"modul": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11], "debug_handler_common": 0, "diagramm": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11], "class": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11], "cod": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11], "handle_unicode_common": 1, "bienvenu": 2, "document": 2, "labo": 2, "gif270": 2, "contenus": 2, "index": 2, "tableau": 2, "labo_prob1": 3, "labo_prob1_common": 4, "labo_prob2": 5, "labo_prob2_common": 6, "labo_prob3": 7, "labo_prob3_common": 8, "labo_prob4": 9, "labo_prob4_common": 10, "smart_formatter_common": 11}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Module debug_handler_common": [[0, "module-debug-handler-common"]], "Diagramme de classe": [[0, "diagramme-de-classe"], [1, "diagramme-de-classe"], [3, "diagramme-de-classe"], [4, "diagramme-de-classe"], [5, "diagramme-de-classe"], [6, "diagramme-de-classe"], [7, "diagramme-de-classe"], [8, "diagramme-de-classe"], [9, "diagramme-de-classe"], [10, "diagramme-de-classe"], [11, "diagramme-de-classe"]], "Code du module": [[0, "module-debug_handler_common"], [1, "module-handle_unicode_common"], [3, "module-labo_prob1"], [4, "module-labo_prob1_common"], [5, "module-labo_prob2"], [6, "module-labo_prob2_common"], [7, "module-labo_prob3"], [8, "module-labo_prob3_common"], [9, "module-labo_prob4"], [10, "module-labo_prob4_common"], [11, "module-smart_formatter_common"]], "Module handle_unicode_common": [[1, "module-handle-unicode-common"]], "Bienvenue - Documentation du labo GIF270": [[2, "bienvenue-documentation-du-labo-gif270"]], "Contenus:": [[2, null]], "Index et tableaux": [[2, "index-et-tableaux"]], "Module labo_prob1": [[3, "module-labo-prob1"]], "Module labo_prob1_common": [[4, "module-labo-prob1-common"]], "Module labo_prob2": [[5, "module-labo-prob2"]], "Module labo_prob2_common": [[6, "module-labo-prob2-common"]], "Module labo_prob3": [[7, "module-labo-prob3"]], "Module labo_prob3_common": [[8, "module-labo-prob3-common"]], "Module labo_prob4": [[9, "module-labo-prob4"]], "Module labo_prob4_common": [[10, "module-labo-prob4-common"]], "Module smart_formatter_common": [[11, "module-smart-formatter-common"]]}, "indexentries": {"debughandler (classe dans debug_handler_common)": [[0, "debug_handler_common.DebugHandler"]], "debughandlertimeoutexception": [[0, "debug_handler_common.DebugHandlerTimeOutException"]], "debug_handler_common": [[0, "module-debug_handler_common"]], "module": [[0, "module-debug_handler_common"], [1, "module-handle_unicode_common"], [3, "module-labo_prob1"], [4, "module-labo_prob1_common"], [5, "module-labo_prob2"], [6, "module-labo_prob2_common"], [7, "module-labo_prob3"], [8, "module-labo_prob3_common"], [9, "module-labo_prob4"], [10, "module-labo_prob4_common"], [11, "module-smart_formatter_common"]], "print_debug_info() (m\u00e9thode statique debug_handler_common.debughandler)": [[0, "debug_handler_common.DebugHandler.print_debug_info"]], "print_general_exception() (m\u00e9thode debug_handler_common.debughandler)": [[0, "debug_handler_common.DebugHandler.print_general_exception"]], "print_timeout_exception() (m\u00e9thode debug_handler_common.debughandler)": [[0, "debug_handler_common.DebugHandler.print_timeout_exception"]], "set_start_time() (m\u00e9thode debug_handler_common.debughandler)": [[0, "debug_handler_common.DebugHandler.set_start_time"]], "set_student_cip() (m\u00e9thode debug_handler_common.debughandler)": [[0, "debug_handler_common.DebugHandler.set_student_cip"]], "start_execution_timing() (m\u00e9thode debug_handler_common.debughandler)": [[0, "debug_handler_common.DebugHandler.start_execution_timing"]], "start_timeout() (m\u00e9thode debug_handler_common.debughandler)": [[0, "debug_handler_common.DebugHandler.start_timeout"]], "stop_execution_timing() (m\u00e9thode debug_handler_common.debughandler)": [[0, "debug_handler_common.DebugHandler.stop_execution_timing"]], "timeout_handler() (m\u00e9thode debug_handler_common.debughandler)": [[0, "debug_handler_common.DebugHandler.timeout_handler"]], "handleunicodecommon (classe dans handle_unicode_common)": [[1, "handle_unicode_common.HandleUnicodeCommon"]], "debug_utf8_string() (m\u00e9thode statique handle_unicode_common.handleunicodecommon)": [[1, "handle_unicode_common.HandleUnicodeCommon.debug_utf8_string"]], "get_strings() (m\u00e9thode statique handle_unicode_common.handleunicodecommon)": [[1, "handle_unicode_common.HandleUnicodeCommon.get_strings"]], "handle_unicode_common": [[1, "module-handle_unicode_common"]], "normalize_string() (m\u00e9thode statique handle_unicode_common.handleunicodecommon)": [[1, "handle_unicode_common.HandleUnicodeCommon.normalize_string"]], "string_from_hex_list() (m\u00e9thode statique handle_unicode_common.handleunicodecommon)": [[1, "handle_unicode_common.HandleUnicodeCommon.string_from_hex_list"]], "laboprob1 (classe dans labo_prob1)": [[3, "labo_prob1.LaboProb1"]], "compare_strings() (m\u00e9thode labo_prob1.laboprob1)": [[3, "labo_prob1.LaboProb1.compare_strings"]], "exceptions() (m\u00e9thode labo_prob1.laboprob1)": [[3, "labo_prob1.LaboProb1.exceptions"]], "factorielle() (m\u00e9thode labo_prob1.laboprob1)": [[3, "labo_prob1.LaboProb1.factorielle"]], "labo_prob1": [[3, "module-labo_prob1"]], "long_calcul() (m\u00e9thode labo_prob1.laboprob1)": [[3, "labo_prob1.LaboProb1.long_calcul"]], "main() (dans le module labo_prob1)": [[3, "labo_prob1.main"]], "prepare() (m\u00e9thode labo_prob1.laboprob1)": [[3, "labo_prob1.LaboProb1.prepare"]], "times2() (m\u00e9thode labo_prob1.laboprob1)": [[3, "labo_prob1.LaboProb1.times2"]], "configdata (classe dans labo_prob1_common)": [[4, "labo_prob1_common.ConfigData"]], "parsingclass1 (classe dans labo_prob1_common)": [[4, "labo_prob1_common.ParsingClass1"]], "labo_prob1_common": [[4, "module-labo_prob1_common"]], "setup_and_parse_cli() (m\u00e9thode labo_prob1_common.parsingclass1)": [[4, "labo_prob1_common.ParsingClass1.setup_and_parse_cli"]], "bigram (classe dans labo_prob2)": [[5, "labo_prob2.Bigram"]], "laboprob2 (classe dans labo_prob2)": [[5, "labo_prob2.LaboProb2"]], "add_bigram() (m\u00e9thode statique labo_prob2.laboprob2)": [[5, "labo_prob2.LaboProb2.add_bigram"]], "add_bigram_object() (m\u00e9thode statique labo_prob2.laboprob2)": [[5, "labo_prob2.LaboProb2.add_bigram_object"]], "add_bigram_other() (m\u00e9thode statique labo_prob2.laboprob2)": [[5, "labo_prob2.LaboProb2.add_bigram_other"]], "add_bigram_vector() (m\u00e9thode statique labo_prob2.laboprob2)": [[5, "labo_prob2.LaboProb2.add_bigram_vector"]], "cosine() (m\u00e9thode statique labo_prob2.laboprob2)": [[5, "labo_prob2.LaboProb2.cosine"]], "labo_prob2": [[5, "module-labo_prob2"]], "main() (dans le module labo_prob2)": [[5, "labo_prob2.main"]], "scalar_product() (m\u00e9thode statique labo_prob2.laboprob2)": [[5, "labo_prob2.LaboProb2.scalar_product"]], "vector_size() (m\u00e9thode statique labo_prob2.laboprob2)": [[5, "labo_prob2.LaboProb2.vector_size"]], "bigramcommon (classe dans labo_prob2_common)": [[6, "labo_prob2_common.BigramCommon"]], "laboprob2common (classe dans labo_prob2_common)": [[6, "labo_prob2_common.LaboProb2Common"]], "parsingclass2 (classe dans labo_prob2_common)": [[6, "labo_prob2_common.ParsingClass2"]], "add_bigram() (m\u00e9thode statique labo_prob2_common.laboprob2common)": [[6, "labo_prob2_common.LaboProb2Common.add_bigram"]], "add_bigram_object() (m\u00e9thode statique labo_prob2_common.laboprob2common)": [[6, "labo_prob2_common.LaboProb2Common.add_bigram_object"]], "add_bigram_other() (m\u00e9thode statique labo_prob2_common.laboprob2common)": [[6, "labo_prob2_common.LaboProb2Common.add_bigram_other"]], "add_bigram_vector() (m\u00e9thode statique labo_prob2_common.laboprob2common)": [[6, "labo_prob2_common.LaboProb2Common.add_bigram_vector"]], "cosine() (m\u00e9thode statique labo_prob2_common.laboprob2common)": [[6, "labo_prob2_common.LaboProb2Common.cosine"]], "define_add_bigram_func() (m\u00e9thode labo_prob2_common.laboprob2common)": [[6, "labo_prob2_common.LaboProb2Common.define_add_bigram_func"]], "do_something() (m\u00e9thode labo_prob2_common.laboprob2common)": [[6, "labo_prob2_common.LaboProb2Common.do_something"]], "get_common_bigrams() (m\u00e9thode statique labo_prob2_common.laboprob2common)": [[6, "labo_prob2_common.LaboProb2Common.get_common_bigrams"]], "labo_prob2_common": [[6, "module-labo_prob2_common"]], "print_common_bigrams() (m\u00e9thode statique labo_prob2_common.laboprob2common)": [[6, "labo_prob2_common.LaboProb2Common.print_common_bigrams"]], "print_dict_bigram() (m\u00e9thode statique labo_prob2_common.laboprob2common)": [[6, "labo_prob2_common.LaboProb2Common.print_dict_bigram"]], "read() (m\u00e9thode labo_prob2_common.laboprob2common)": [[6, "labo_prob2_common.LaboProb2Common.read"]], "read_file_lines() (m\u00e9thode statique labo_prob2_common.parsingclass2)": [[6, "labo_prob2_common.ParsingClass2.read_file_lines"]], "read_one_file() (m\u00e9thode labo_prob2_common.laboprob2common)": [[6, "labo_prob2_common.LaboProb2Common.read_one_file"]], "scalar_product() (m\u00e9thode statique labo_prob2_common.laboprob2common)": [[6, "labo_prob2_common.LaboProb2Common.scalar_product"]], "setup_and_parse_cli() (m\u00e9thode labo_prob2_common.parsingclass2)": [[6, "labo_prob2_common.ParsingClass2.setup_and_parse_cli"]], "vector_size() (m\u00e9thode statique labo_prob2_common.laboprob2common)": [[6, "labo_prob2_common.LaboProb2Common.vector_size"]], "avltree (classe dans labo_prob3)": [[7, "labo_prob3.AVLTree"]], "labo_prob3": [[7, "module-labo_prob3"]], "main() (dans le module labo_prob3)": [[7, "labo_prob3.main"]], "rotate_right() (m\u00e9thode labo_prob3.avltree)": [[7, "labo_prob3.AVLTree.rotate_right"]], "avltreecommon (classe dans labo_prob3_common)": [[8, "labo_prob3_common.AVLTreeCommon"]], "binarysearchtree (classe dans labo_prob3_common)": [[8, "labo_prob3_common.BinarySearchTree"]], "laboprob3common (classe dans labo_prob3_common)": [[8, "labo_prob3_common.LaboProb3Common"]], "parsingclass3 (classe dans labo_prob3_common)": [[8, "labo_prob3_common.ParsingClass3"]], "treenode (classe dans labo_prob3_common)": [[8, "labo_prob3_common.TreeNode"]], "build_avl() (m\u00e9thode labo_prob3_common.laboprob3common)": [[8, "labo_prob3_common.LaboProb3Common.build_AVL"]], "do_something() (m\u00e9thode labo_prob3_common.laboprob3common)": [[8, "labo_prob3_common.LaboProb3Common.do_something"]], "get() (m\u00e9thode labo_prob3_common.binarysearchtree)": [[8, "labo_prob3_common.BinarySearchTree.get"]], "has_any_children() (m\u00e9thode labo_prob3_common.treenode)": [[8, "labo_prob3_common.TreeNode.has_any_children"]], "has_both_children() (m\u00e9thode labo_prob3_common.treenode)": [[8, "labo_prob3_common.TreeNode.has_both_children"]], "has_left_child() (m\u00e9thode labo_prob3_common.treenode)": [[8, "labo_prob3_common.TreeNode.has_left_child"]], "has_right_child() (m\u00e9thode labo_prob3_common.treenode)": [[8, "labo_prob3_common.TreeNode.has_right_child"]], "is_leaf() (m\u00e9thode labo_prob3_common.treenode)": [[8, "labo_prob3_common.TreeNode.is_leaf"]], "is_left_child() (m\u00e9thode labo_prob3_common.treenode)": [[8, "labo_prob3_common.TreeNode.is_left_child"]], "is_right_child() (m\u00e9thode labo_prob3_common.treenode)": [[8, "labo_prob3_common.TreeNode.is_right_child"]], "is_root() (m\u00e9thode labo_prob3_common.treenode)": [[8, "labo_prob3_common.TreeNode.is_root"]], "labo_prob3_common": [[8, "module-labo_prob3_common"]], "length() (m\u00e9thode labo_prob3_common.binarysearchtree)": [[8, "labo_prob3_common.BinarySearchTree.length"]], "print_avl() (m\u00e9thode labo_prob3_common.laboprob3common)": [[8, "labo_prob3_common.LaboProb3Common.print_AVL"]], "print_one_node() (m\u00e9thode labo_prob3_common.laboprob3common)": [[8, "labo_prob3_common.LaboProb3Common.print_one_node"]], "put() (m\u00e9thode labo_prob3_common.binarysearchtree)": [[8, "labo_prob3_common.BinarySearchTree.put"]], "read_file_lines() (m\u00e9thode statique labo_prob3_common.parsingclass3)": [[8, "labo_prob3_common.ParsingClass3.read_file_lines"]], "read_numbers() (m\u00e9thode labo_prob3_common.parsingclass3)": [[8, "labo_prob3_common.ParsingClass3.read_numbers"]], "read_one_file() (m\u00e9thode labo_prob3_common.parsingclass3)": [[8, "labo_prob3_common.ParsingClass3.read_one_file"]], "rebalance() (m\u00e9thode labo_prob3_common.avltreecommon)": [[8, "labo_prob3_common.AVLTreeCommon.rebalance"]], "replacenodedata() (m\u00e9thode labo_prob3_common.treenode)": [[8, "labo_prob3_common.TreeNode.replaceNodeData"]], "rotate_left() (m\u00e9thode labo_prob3_common.avltreecommon)": [[8, "labo_prob3_common.AVLTreeCommon.rotate_left"]], "rotate_right() (m\u00e9thode labo_prob3_common.avltreecommon)": [[8, "labo_prob3_common.AVLTreeCommon.rotate_right"]], "setup_and_parse_cli() (m\u00e9thode labo_prob3_common.parsingclass3)": [[8, "labo_prob3_common.ParsingClass3.setup_and_parse_cli"]], "update_balance() (m\u00e9thode labo_prob3_common.avltreecommon)": [[8, "labo_prob3_common.AVLTreeCommon.update_balance"]], "laboprob4 (classe dans labo_prob4)": [[9, "labo_prob4.LaboProb4"]], "addedgesbetweenadjacentwords() (m\u00e9thode labo_prob4.laboprob4)": [[9, "labo_prob4.LaboProb4.addEdgesBetweenAdjacentWords"]], "addwordtomask() (m\u00e9thode labo_prob4.laboprob4)": [[9, "labo_prob4.LaboProb4.addWordToMask"]], "buildgraph2() (m\u00e9thode labo_prob4.laboprob4)": [[9, "labo_prob4.LaboProb4.buildGraph2"]], "labo_prob4": [[9, "module-labo_prob4"]], "main() (dans le module labo_prob4)": [[9, "labo_prob4.main"]], "laboprob4common (classe dans labo_prob4_common)": [[10, "labo_prob4_common.LaboProb4Common"]], "parsingclass4 (classe dans labo_prob4_common)": [[10, "labo_prob4_common.ParsingClass4"]], "setmaxdistance() (m\u00e9thode labo_prob4_common.laboprob4common)": [[10, "labo_prob4_common.LaboProb4Common.SetMaxDistance"]], "addedgesbetweenadjacentwords() (m\u00e9thode labo_prob4_common.laboprob4common)": [[10, "labo_prob4_common.LaboProb4Common.addEdgesBetweenAdjacentWords"]], "addwordtomask() (m\u00e9thode labo_prob4_common.laboprob4common)": [[10, "labo_prob4_common.LaboProb4Common.addWordToMask"]], "buildgraph() (m\u00e9thode labo_prob4_common.laboprob4common)": [[10, "labo_prob4_common.LaboProb4Common.buildGraph"]], "buildgraph1() (m\u00e9thode labo_prob4_common.laboprob4common)": [[10, "labo_prob4_common.LaboProb4Common.buildGraph1"]], "buildgraph2() (m\u00e9thode labo_prob4_common.laboprob4common)": [[10, "labo_prob4_common.LaboProb4Common.buildGraph2"]], "findword() (m\u00e9thode labo_prob4_common.laboprob4common)": [[10, "labo_prob4_common.LaboProb4Common.findWord"]], "getwordmask() (m\u00e9thode labo_prob4_common.laboprob4common)": [[10, "labo_prob4_common.LaboProb4Common.getWordMask"]], "labo_prob4_common": [[10, "module-labo_prob4_common"]], "markpath() (m\u00e9thode labo_prob4_common.laboprob4common)": [[10, "labo_prob4_common.LaboProb4Common.markPath"]], "printfromworddistance() (m\u00e9thode labo_prob4_common.laboprob4common)": [[10, "labo_prob4_common.LaboProb4Common.printFromWordDistance"]], "printpath() (m\u00e9thode labo_prob4_common.laboprob4common)": [[10, "labo_prob4_common.LaboProb4Common.printPath"]], "printrecurwithprev() (m\u00e9thode labo_prob4_common.laboprob4common)": [[10, "labo_prob4_common.LaboProb4Common.printRecurWithPrev"]], "setup_and_parse_cli() (m\u00e9thode labo_prob4_common.parsingclass4)": [[10, "labo_prob4_common.ParsingClass4.setup_and_parse_cli"]], "storeworddistances() (m\u00e9thode labo_prob4_common.laboprob4common)": [[10, "labo_prob4_common.LaboProb4Common.storeWordDistances"]], "testprob4() (m\u00e9thode labo_prob4_common.laboprob4common)": [[10, "labo_prob4_common.LaboProb4Common.testProb4"]], "smartformatter (classe dans smart_formatter_common)": [[11, "smart_formatter_common.SmartFormatter"]], "smart_formatter_common": [[11, "module-smart_formatter_common"]]}})